stage 'checkout'

def checkout_branches = [:]
def build_branches = [:]

def slaves = ['Rsg-slave1','Rsg-slave2','Rsg-slave3','Rsg-slave4']

def slave_label = ['Rsg-slave1' : ['armv7hf-gcc4.6', 'i386-gcc4.6', 'rsg', 'ubuntu-12.04', 'x86_64-gcc4.6'],
                   'Rsg-slave2' : ['armv7hf-gcc4.8', 'i386-gcc4.8',' rsg', 'ubuntu-14.04'],
                   'Rsg-slave3' : ['rsg', 'vs10', 'windows_server-2012r2'],
                   'Rsg-slave4' : ['armv7hf-gcc4.8', 'mipsel-gcc', 'rsg', 'ubuntu-14.04', 'x86_64-gcc4.8']
                  ]
def slave_id = [   
                   'Rsg-slave1' : 'i386-gcc4.6',
                   'Rsg-slave2' : 'i386-gcc4.8',
                   'Rsg-slave3' : 'vs10',
                   'Rsg-slave4' : 'x86_64-gcc4.8'
               ]


for(slave in slaves){
    def slavename = slave
    def slaveid = slave_id[slavename]
    checkout_branches[slave] = {

        node(slaveid)
        {
            //sh 'rm -rf ./*'\
            echo "########################## " + slavename + " Check out #########################"
            if (isUnix())
                checkout([$class: 'GitSCM', branches: [[name: "${COMMIT_ID}"]], doGenerateSubmoduleConfigurations: false,extensions: [[$class: 'SubmoduleOption', disableSubmodules: false, parentCredentials: true, recursiveSubmodules: false, reference: '', trackingSubmodules: true]], gitTool: 'Default', submoduleCfg: [], userRemoteConfigs: [[credentialsId: '6e519a56-9857-46cc-ad30-369cd6984189', url: 'https://stash.slamtec.com/scm/slam/topic_slamware_release.git']]])
            else
                checkout([$class: 'GitSCM', branches: [[name: "${COMMIT_ID}"]], doGenerateSubmoduleConfigurations: false,extensions: [[$class: 'SubmoduleOption', disableSubmodules: false, parentCredentials: true, recursiveSubmodules: false, reference: '', trackingSubmodules: true]], gitTool: 'windowsGit', submoduleCfg: [], userRemoteConfigs: [[credentialsId: '6e519a56-9857-46cc-ad30-369cd6984189', url: 'https://stash.slamtec.com/scm/slam/topic_slamware_release.git']]])

        }
    }
}

parallel checkout_branches

stage 'build'

build_branches['RPSG-RELEASE-agent-daily'] = {
    node('rsg' && 'i386-gcc4.6')
    {
        sh 'ls -la'
        echo "########################## Build RPSG-RELEASE-agent-daily #########################"
        sh 'scripts/component-agent.sh build'
        sh 'ls -la build/output/sw/'
        sh 'ls -la build/output/conf/'
        sh 'rm -rf build/output/conf/*'
        sh 'rm -rf build/output/sw/*'   
    }
    
}

build_branches['RPSG-RELEASE-agent_x1000-daily'] = {
    node('rsg' && 'mipsel-gcc')
    {
        sh 'ls -la'
        sh 'export PATH=$PATH:/opt/toolchain/mipsel-gcc472-glibc216-mips32/bin'
        sh 'scripts/component-agent.sh build x1000'

        sh 'ls -la build/output/sw/'
        sh 'rm -rf build/output/sw/*'   
    }
}

build_branches['RPSG-RELEASE-depthcam-daily'] = {
    node('rsg' && 'x86_64-gcc4.8')
    {        

        echo "########################## Build RPSG-RELEASE-depthcam-daily #########################"
        sh 'rm -rf sdp/build/'
        sh 'sdp/scripts/build_depthcam_srv.sh'
        sh 'ls -la sdp/build/linux-x86_64-release/output/bin'
        sh 'rm -rf sdp/build/*'
    }

}

build_branches['RPSG-RELEASE-firmwares-daily'] = {
    node('rsg' && 'vs10')
    {        

        echo "########################## Build RPSG-RELEASE-firmwares-daily #########################"
        echo 'test ----- '
    }
}

build_branches['RPSG-RELEASE-slamwared-daily'] = {
    node('rsg' && 'i386-gcc4.6')
    {
        echo "########################## Build RPSG-RELEASE-slamwared-daily #########################"
        sh 'scripts/component-slamwared.sh build'
        sh 'ls -la build/output/sw/'
        sh 'ls -la build/output/conf/'
        sh 'rm -rf build/output/conf/*'
        sh 'rm -rf build/output/sw/*' 
    }
}

build_branches['RPSG-RELEASE-slamwared_x1000-daily'] = {
    node('rsg' && 'mipsel-gcc')
    {
        sh 'export PATH=$PATH:/opt/toolchain/mipsel-gcc472-glibc216-mips32/bin'
        sh 'scripts/component-slamwared.sh build x1000'
        sh 'ls -la build/output/sw/'
        sh 'ls -la build/output/conf/'
        sh 'rm -rf build/output/conf/*'
        sh 'rm -rf build/output/sw/*' 
    }
}

build_branches['RPSG-RELEASE-sweep_opt-slamwared_x1000-daily'] = {
    node('rsg' && 'mipsel-gcc')
    {
        sh 'cd sdp'
        sh 'git checkout feature/sweep_opt'
        sh 'git pull'
        sh 'git submodule update --init --recursive'
        sh 'cd ..'
        sh 'export PATH=$PATH:/opt/toolchain/mipsel-gcc472-glibc216-mips32/bin'
        sh 'scripts/component-slamwared.sh build x1000'
        sh 'ls -la build/output/sw/'
        sh 'ls -la build/output/conf/'
        sh 'rm -rf build/output/conf/*'
        sh 'rm -rf build/output/sw/*' 
    }
}

parallel build_branches
